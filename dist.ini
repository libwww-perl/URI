name    = URI
author  = Gisle Aas <gisle@activestate.com>
license = Perl_5
main_module = lib/URI.pm
copyright_holder = Gisle Aas, Martijn Koster
copyright_year   = 1995-2016
version = 6.06

; Gather stuff in
[Git::GatherDir]
exclude_filename = LICENSE
exclude_filename = META.json
exclude_filename = Makefile.PL
exclude_filename = README.md
[PruneCruft]

; Handle the META resources
[MetaConfig]
[MetaProvides::Package]
[MetaNoIndex]
directory = t
directory = xt
[MetaYAML]
[MetaJSON]
[MetaResources]
x_IRC = irc://irc.perl.org/#lwp
x_MailingList = mailto:libwww@perl.org

[@Filter]
-bundle = @Git
-remove = Git::Check
-remove = Git::Commit

[Git::Check]
allow_dirty = Changes
allow_dirty = dist.ini
allow_dirty = LICENSE
allow_dirty = META.json
allow_dirty = Makefile.PL
allow_dirty = README.md

[Git::Commit]
allow_dirty = Changes
allow_dirty = dist.ini
allow_dirty = LICENSE
allow_dirty = META.json
allow_dirty = Makefile.PL
allow_dirty = README.md

[Git::Contributors]
[GithubMeta]
issues = 1
user = libwww-perl
[Authority]
do_munging = 0
authority = cpan:LWWWP
[Manifest]
[License]

; Create Readme
[ReadmeAnyFromPod / Markdown_Readme]
source_filename = lib/URI.pm
type = markdown
filename = README.md
location = root

; make the bin dir executables
[ExecDir]
; [ShareDir]

; Handle Versioning
[PkgVersion]
[NextRelease]
format = %-9v %{yyyy-MM-dd}d

[Prereqs::FromCPANfile]

[MakeMaker::Awesome]

[TestRelease]
[ConfirmRelease]
[UploadToCPAN]
[CheckChangeLog]
[CheckChangesHasContent]
; TODO strict and warnings to quiet the kwalitee tests
; [Test::Kwalitee]
; filename = xt/author/kwalitee.t
[MojibakeTests]
[Test::Version]
[Test::ReportPrereqs]
[Test::Compile]
bail_out_on_fail = 1
xt_mode = 1

[Test::Portability]
; TODO perltidy for NoTabs and namespace::autoclean
; [Test::CleanNamespaces] ; TODO
; [Test::NoTabs] ; TODO
; [Test::EOL] ; TODO
[MetaTests]
[Test::ChangesHasContent]
[Test::MinimumVersion]
[PodSyntaxTests]

[Test::Pod::Coverage::Configurable]
skip = URI::IRI
skip = URI::_foreign
skip = URI::_idna
skip = URI::_login
skip = URI::_ldap
skip = URI::file::QNX
skip = URI::nntp
skip = URI::urn::isbn
skip = URI::urn::oid
skip = URI::sftp
trustme = URI => qr/^(?:STORABLE_freeze|STORABLE_thaw|TO_JSON|implementor)$/
trustme = URI::Escape => qr/^(?:escape_char)$/
trustme = URI::Heuristic => qr/^(?:MY_COUNTRY|uf_url|uf_urlstr)$/
trustme = URI::URL => qr/^(?:address|article|crack|dos_path|encoded822addr|eparams|epath|frag)$/
trustme = URI::URL => qr/^(?:full_path|groupart|keywords|local_path|mac_path|netloc|newlocal|params|path|path_components|print_on|query|strict|unix_path|url|vms_path)$/
trustme = URI::WithBase => qr/^(?:can|clone|eq|new_abs)$/
trustme = URI::_punycode => qr/^(?:adapt|code_point|digit_value|min)$/
trustme = URI::_query => qr/^(?:equery|query|query_form|query_form_hash|query_keywords|query_param|query_param_append|query_param_delete)$/
trustme = URI::_segment => qr/^(?:new)$/
trustme = URI::_userpass => qr/^(?:password|user)$/
trustme = URI::file => qr/^(?:os_class)$/
trustme = URI::file::Base => qr/^(?:dir|file|new)$/
trustme = URI::file::FAT => qr/^(?:fix_path)$/
trustme = URI::file::Mac => qr/^(?:dir|file)$/
trustme = URI::file::OS2 => qr/^(?:file)$/
trustme = URI::file::Unix => qr/^(?:file)$/
trustme = URI::file::Win32 => qr/^(?:file|fix_path)$/
trustme = URI::ftp => qr/^(?:password|user)$/
trustme = URI::gopher => qr/^(?:gopher_type|gtype|search|selector|string)$/
trustme = URI::ldapi => qr/^(?:un_path)$/
trustme = URI::mailto => qr/^(?:headers|to)$/
trustme = URI::news => qr/^(?:group|message)$/
trustme = URI::pop => qr/^(?:auth|user)$/
trustme = URI::sip => qr/^(?:params|params_form)$/
trustme = URI::urn => qr/^(?:nid|nss)$/

[Test::PodSpelling]
wordlist = Pod::Wordlist
spell_cmd = aspell list
stopword = Berners
stopword = ISBNs
stopword = Masinter
stopword = OIDs
stopword = TCP
stopword = TLS
stopword = UDP
stopword = UNC
stopword = lowercasing
stopword = relativize
stopword = uppercasing
stopword = IDNA
stopword = OpenLDAP
stopword = etype
stopword = evalue
stopword = Punycode

[RunExtraTests]

[CheckStrictVersion]
decimal_only = 1

[CopyFilesFromBuild]
copy = Makefile.PL
copy = META.json
copy = LICENSE
